{Application 'GPS_123' logic file generated by CSPro}
PROC GLOBAL

numeric max_time = 120;
numeric desired_accuracy = 20;
string gps_reading_capi_text = "Take GPS reading?";
string gps_data_status_capi_text;
string gps_accuracy_status_capi_label;
string gps_accuracy_status_capi_text;


function IsCompleteGPSData()

	// All GPS data values exist
	IsCompleteGPSData = 0;
	if GPS_LATITUDE <> notappl
		and GPS_LONGITUDE <> notappl
		and GPS_ALTITUDE <> notappl
		and GPS_ACCURACY <> notappl
		and GPS_SATELLITES <> notappl
		and GPS_READTIME <> notappl then
		IsCompleteGPSData = 1;
	endif;

end;


function IsDesiredAccuracy()

	// GPS accuracy is within defined range
	IsDesiredAccuracy = 0;
	if 0 <= GPS_ACCURACY and GPS_ACCURACY <= desired_accuracy then
		IsDesiredAccuracy = 1;
	endif;

end;


function AssignGPSValues()

	// Assign result of GPS reading
	AssignGPSValues = 0;
	numeric input = 1;
	if IsCompleteGPSData() then
		if gps(accuracy) > GPS_ACCURACY then
			// Prompt user before replacing GPS data with less accurate GPS data
			input = warning("Previous GPS data (accuracy = %d) will be replaced with less "
				"accurate GPS data (accuracy = %d).", GPS_ACCURACY, gps(accuracy))
				select("Confirm", continue, "Cancel", continue);

		else
			// Prompt user before replacing GPS data
			input = warning("Previous GPS data will be replaced.")
				select("Confirm", continue, "Cancel", continue);
		endif
	endif;

	if input <> 2 then
		GPS_LATITUDE = gps(latitude);
		GPS_LONGITUDE = gps(longitude);
		GPS_ALTITUDE = gps(altitude);
		GPS_ACCURACY = gps(accuracy);
		GPS_SATELLITES = gps(satellites);
		GPS_READTIME = gps(readtime);
		AssignGPSValues = 1;
	endif;

end;


function DeleteGPSData()

	// Delete GPS data
	GPS_LATITUDE = notappl;
	GPS_LONGITUDE = notappl;
	GPS_ALTITUDE = notappl;
	GPS_ACCURACY = notappl;
	GPS_SATELLITES = notappl;
	GPS_READTIME = notappl;

end;


function TakeGPSReading()

	// Take GPS reading
	if gps(open) then
		numeric result = gps(read, max_time, desired_accuracy);

		if result = 1 then
			// Read was successful
			if AssignGPSValues() then
				gps_reading_capi_text = "Take GPS reading?";

			else
				gps_reading_capi_text = "You chose not to update GPS data. Retake GPS reading?";
				reenter;
			endif;

		elseif result = -1 then
			gps_reading_capi_text = "GPS reading cancelled by user. Retake GPS reading?";
			reenter;

		elseif result = 0 then
			gps_reading_capi_text = "GPS reading failed. Retake GPS reading?";
			reenter;
		endif;

		gps(close);

	else
		gps_reading_capi_text = "Failed to start GPS. Retake GPS reading?";
		reenter;
	endif;

end;


PROC GPS_FF

preproc

	if not getos() in 10, 20 then
		// Not Windows or Android OS
		warning("This application is supported for Android and Windows OS. Application will exit.");
		stop(1);
	endif;


PROC GPS_QUEST


PROC GPS_READING

onfocus

	if IsCompleteGPSData() then
		// Update value set

		if getos() = 10 then
			setvalueset(GPS_READING, GPS_WINDOWS_READING_VS2);
		else
			setvalueset(GPS_READING, GPS_ANDROID_READING_VS2);
		endif;
		
		// Update CAPI Text
		gps_data_status_capi_text = "collected";
		gps_accuracy_status_capi_label = "GPS accuracy: ";
		if IsDesiredAccuracy() then
			gps_accuracy_status_capi_text = "good";

		else
			gps_accuracy_status_capi_text = "bad";
		endif;

		// Preselect "keep data," so field can be advanced through when returning from partial save 
		$ = 2;

	else
		// Update value set
		if getos() = 10 then
			setvalueset(GPS_READING, GPS_WINDOWS_READING_VS1);
		else
			setvalueset(GPS_READING, GPS_ANDROID_READING_VS1);
		endif;

		// Update CAPI Text
		gps_data_status_capi_text = "not collected";
		gps_accuracy_status_capi_label = "";
		gps_accuracy_status_capi_text = "";
	endif;

postproc

	// Handle user input
	if $ = 1 then
		TakeGPSReading();

	elseif $ = 2 then
		gps_reading_capi_text = "Take GPS reading?";
		skip to GPS_RESULTS;

	elseif $ = 3 then
		if IsCompleteGPSData() then
			warning("GPS data will be deleted.")
				select("Confirm", continue, "Cancel", GPS_READING);
		endif;

		DeleteGPSData();
		gps_reading_capi_text = "Take GPS reading?";
		skip to GPS_RESULTS;

	else
		warning("Unhandled value set option.");
		reenter;
	endif;


PROC GPS_RESULTS

